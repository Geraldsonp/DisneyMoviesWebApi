// <auto-generated />
using System;
using DisneyMovies.Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DisneyMovies.Infrastructure.Migrations
{
    [DbContext(typeof(DisneyMoviesDbContext))]
    partial class DisneyMoviesDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.8");

            modelBuilder.Entity("DisneyMovies.Core.Entities.Character", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Age")
                        .HasColumnType("INTEGER");

                    b.Property<string>("History")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ImgUrl")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<double>("Weight")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.ToTable("Characters");

                    b.HasData(
                        new
                        {
                            Id = 5,
                            Age = 14,
                            History = "is a high school student and freelance hero/vigilante. She is unusual in this in that she not only lacks a secret identity, but also remains on good terms with various law enforcement, government, and military agencies. ",
                            ImgUrl = "https://static.wikia.nocookie.net/kimpossible/images/4/49/Kim_Possible_Mugshot.png/revision/latest?cb=20150728134300",
                            Name = "Kimberly Ann Possible",
                            Weight = 50.0
                        },
                        new
                        {
                            Id = 1,
                            Age = 15,
                            History = "Ronald Stoppable has been Kim Possible's best friend since Pre-K, her next door neighbor, and finally boyfriend, mainly serving as her sidekick during missions.",
                            ImgUrl = "https://static.wikia.nocookie.net/kimpossible/images/b/b2/Ron_Stoppable_Mugshot.png/revision/latest?cb=20120416162613",
                            Name = "Ron Stoppable",
                            Weight = 55.0
                        },
                        new
                        {
                            Id = 2,
                            Age = 14,
                            History = "Bonnie Rockwaller is Kim Possible's Middleton High School classmate, fellow cheerleader, and her archrival since at least middle school.",
                            ImgUrl = "https://static.wikia.nocookie.net/kimpossible/images/9/97/Bonnie_Mugshot.png/revision/latest?cb=20120420210125",
                            Name = "Bonnie RockWaller",
                            Weight = 60.0
                        },
                        new
                        {
                            Id = 3,
                            Age = 35,
                            History = "Drew Theodore P. Lipsky, alias Dr. Drakken, is a genius robotics inventor and engineer, considered by Kim Possible as her arch-nemesis. A self-proclaimed mad scientist, Drakken dreamed of world domination, but was constantly thwarted by the efforts of Team Possible. Voiced by John DiMaggio, he is the show's main antagonist.",
                            ImgUrl = "https://static.wikia.nocookie.net/kimpossible/images/d/d3/Dr.Drakken.png/revision/latest/scale-to-width-down/200?cb=20200208094132",
                            Name = "Drew Lipsky",
                            Weight = 80.0
                        });
                });

            modelBuilder.Entity("DisneyMovies.Core.Entities.CharacterMedia", b =>
                {
                    b.Property<int>("CharacterId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MediaId")
                        .HasColumnType("INTEGER");

                    b.HasKey("CharacterId", "MediaId");

                    b.HasIndex("MediaId");

                    b.ToTable("CharacterMedia");

                    b.HasData(
                        new
                        {
                            CharacterId = 5,
                            MediaId = 5
                        },
                        new
                        {
                            CharacterId = 1,
                            MediaId = 5
                        },
                        new
                        {
                            CharacterId = 2,
                            MediaId = 5
                        },
                        new
                        {
                            CharacterId = 3,
                            MediaId = 5
                        });
                });

            modelBuilder.Entity("DisneyMovies.Core.Entities.Genre", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ImgUrl")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Genres");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ImgUrl = "",
                            Name = "Action"
                        },
                        new
                        {
                            Id = 2,
                            ImgUrl = "",
                            Name = "Comedy"
                        },
                        new
                        {
                            Id = 3,
                            ImgUrl = "",
                            Name = "Drama"
                        },
                        new
                        {
                            Id = 4,
                            ImgUrl = "",
                            Name = "Fantasy"
                        },
                        new
                        {
                            Id = 5,
                            ImgUrl = "",
                            Name = "Christmas"
                        },
                        new
                        {
                            Id = 6,
                            ImgUrl = "",
                            Name = "Mystery"
                        },
                        new
                        {
                            Id = 7,
                            ImgUrl = "",
                            Name = "Romance"
                        },
                        new
                        {
                            Id = 8,
                            ImgUrl = "",
                            Name = "Animation"
                        },
                        new
                        {
                            Id = 9,
                            ImgUrl = "",
                            Name = "Family"
                        });
                });

            modelBuilder.Entity("DisneyMovies.Core.Entities.GenreMedia", b =>
                {
                    b.Property<int>("GenreId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MediaId")
                        .HasColumnType("INTEGER");

                    b.HasKey("GenreId", "MediaId");

                    b.HasIndex("MediaId");

                    b.ToTable("GenreMedia");

                    b.HasData(
                        new
                        {
                            GenreId = 2,
                            MediaId = 5
                        },
                        new
                        {
                            GenreId = 8,
                            MediaId = 5
                        });
                });

            modelBuilder.Entity("DisneyMovies.Core.Entities.Media", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("TEXT");

                    b.Property<long>("DurationInMinutes")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ImgUrl")
                        .HasColumnType("TEXT");

                    b.Property<int>("Rating")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Type")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Medias");

                    b.HasData(
                        new
                        {
                            Id = 5,
                            CreationDate = new DateTime(2002, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DurationInMinutes = 23L,
                            ImgUrl = "https://www.themoviedb.org/t/p/w600_and_h900_bestv2/qsDNX8DPwWydDn9oUIhe1WcTuUH.jpg",
                            Rating = 3,
                            Title = "Kim Possible",
                            Type = 1
                        });
                });

            modelBuilder.Entity("DisneyMovies.Core.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .HasColumnType("TEXT");

                    b.Property<string>("UserName")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 223,
                            Email = "DefaultUser@hmail.com",
                            Name = "Default User",
                            Password = "Password123",
                            UserName = "DName"
                        });
                });

            modelBuilder.Entity("DisneyMovies.Core.Entities.CharacterMedia", b =>
                {
                    b.HasOne("DisneyMovies.Core.Entities.Character", "Character")
                        .WithMany("CharactersMedias")
                        .HasForeignKey("CharacterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DisneyMovies.Core.Entities.Media", "Media")
                        .WithMany("CharacterMedias")
                        .HasForeignKey("MediaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Character");

                    b.Navigation("Media");
                });

            modelBuilder.Entity("DisneyMovies.Core.Entities.GenreMedia", b =>
                {
                    b.HasOne("DisneyMovies.Core.Entities.Genre", "Genre")
                        .WithMany("GenreMedias")
                        .HasForeignKey("GenreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DisneyMovies.Core.Entities.Media", "Media")
                        .WithMany("GenreMedias")
                        .HasForeignKey("MediaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Genre");

                    b.Navigation("Media");
                });

            modelBuilder.Entity("DisneyMovies.Core.Entities.Character", b =>
                {
                    b.Navigation("CharactersMedias");
                });

            modelBuilder.Entity("DisneyMovies.Core.Entities.Genre", b =>
                {
                    b.Navigation("GenreMedias");
                });

            modelBuilder.Entity("DisneyMovies.Core.Entities.Media", b =>
                {
                    b.Navigation("CharacterMedias");

                    b.Navigation("GenreMedias");
                });
#pragma warning restore 612, 618
        }
    }
}
